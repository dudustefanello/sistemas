$date
	Thu May 26 13:11:18 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$scope module M1 $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # clk $end
$var wire 1 $ e $end
$var wire 4 % r [3:0] $end
$var wire 1 & valid $end
$var wire 4 ' m4 [3:0] $end
$var wire 1 ( m1 $end
$var wire 8 ) c [7:0] $end
$var reg 2 * count [1:0] $end
$var reg 8 + total [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
x(
bx '
z&
bx %
0$
0#
bx "
bx !
$end
#1
b0 )
b0 +
b0 *
1#
#2
0#
#3
1#
#4
0#
#5
b1 *
b0 %
1#
1$
b0 '
0(
b1000 "
b11 !
#6
0#
#7
b10 *
1#
#8
0#
#9
b11 %
b1111 '
1(
b11 *
1#
#10
0#
#11
b0 %
b0 '
0(
b0 *
b11 +
1#
#12
0#
#13
b1 *
b110 +
1#
#14
0#
#15
b10 *
b1100 +
1#
#16
0#
#17
b11000 )
b11 %
b1111 '
1(
b11 *
b11000 +
1#
#18
0#
#19
b0 %
b0 )
b0 '
0(
b0 *
b110011 +
1#
#20
0#
